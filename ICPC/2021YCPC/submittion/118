#pragma GCC optimize("Ofast", "unroll-loops")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
using pii = pair<int, int>;
template<typename T>
using Prior = std::priority_queue<T>;
template<typename T>
using prior = std::priority_queue<T, vector<T>, greater<T>>;

#define X first
#define Y second
#define eb emplace_back
#define ALL(x) begin(x), end(x)
#define RALL(x) rbegin(x), rend(x)
#define fastIO() ios_base::sync_with_stdio(0), cin.tie(0)

template<typename T>
bool chmin(T &lhs, T rhs) {return lhs > rhs ? true : (lhs = rhs, false);}

template<typename T>
bool chmax(T &lhs, T rhs) {return lhs < rhs ? true : (lhs = rhs, false);}

int Hash(vector<int> &vec) {
    int ans = 0;
    for (auto x : vec) {
        ans = (ans * 257 + x) % 998244353;
    }
    return ans;
}

void solve() {
    int N, M, D; cin >> N >> M >> D;
    
    vector<int> sample(N, 0);
    for (auto &x : sample) {
        int t; cin >> t;
        vector<int> vec(D);
        for (auto &y : vec) cin >> y;
        x = Hash(vec);
    }
    set<int> st(ALL(sample));
    
    vector<int> test(M, 0);
    for (auto &x : test) {
        int t; cin >> t;
        vector<int> vec(D);
        for (auto &y : vec) cin >> y;
        x = Hash(vec);
    }
    
    for (auto x : test) {
        cout << (st.count(x) ? "BAD" : "GOOD") << "\n";
    }
}

int32_t main() {
    fastIO();
    
    int t = 1; // cin >> t;
    for (int _ = 1; _ <= t; ++_) {
        solve();
    }
    
    return 0;
}
